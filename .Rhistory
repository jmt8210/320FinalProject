geom_point() +
geom_smooth(method=lm) +
labs(x="Total Yards",
y="Points Scored",
title = "Points Scored per Yard by Game")
#Graph comparing the effectiveness of rushing per play for several schools
rushing2013 %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
inner_join(teams2013, by="Team Code") %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
geom_violin() +
labs(x="",
y="Rushing Yards",
title = "Distribution of Rushing Yards per Attempt by Top Football Schools") +
theme(legend.position = "none")
#Graph comparing the effectiveness of rushing per play for several schools
passing2013 %>%
inner_join(teams2013, by="Team Code") %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
labs(x="",
y="Passing Yards",
title = "Distribution of Passing Yards per Attempt by Top Football Schools") +
geom_violin() +
theme(legend.position="none")
seasonStats2013 %>%
inner_join(teams2013, by="Team Code") %>%
inner_join(confrence2013, by="Conference Code") %>%
filter(Subdivision=="FBS") %>%
ggplot(aes(x=factor(Name.x), y=Wins, color=Name.y)) +
geom_point() +
labs(x="Team") +
theme(axis.text.x=element_blank())
attendance2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/game-statistics.csv")
teamGameStats2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/team-game-statistics.csv")
rushing2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/rush.csv")
passing2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/pass.csv")
teams2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/team.csv")
games2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/game.csv")
confrence2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/conference.csv")
#Todo: Import all tables, and concat the tables with rbind()
findPoints <- function(gameCode, teamCode){
opponentPoints <- teamGameStats2013 %>%
filter(`Game Code` == gameCode & `Team Code` != teamCode) %>%
select(Points)
as.double(opponentPoints[1,1])
}
for(i in 1:nrow(teamGameStats2013)){
teamGameStats2013[i,69] = findPoints(as.character(teamGameStats2013[i,2]), as.double(teamGameStats2013[i,1]))
}
names(teamGameStats2013)[69] <- "opponentPoints"
teamGameStats2013 <- teamGameStats2013 %>%
mutate(win=opponentPoints<Points)
teamGameStats2013
#FCS not included in dataset, only consider FBS
seasonStats2013 <- teamGameStats2013 %>%
inner_join(teams2013, by="Team Code") %>%
inner_join(confrence2013, by="Conference Code") %>%
filter(Subdivision=="FBS")
seasonStats2013
#Graph comparing Yards to Points
teamGameStats2013 %>%
ggplot((aes(x=(`Pass Yard` + `Rush Yard`), y=Points))) +
geom_point() +
geom_smooth(method=lm) +
labs(x="Total Yards",
y="Points Scored",
title = "Points Scored per Yard by Game")
#Graph comparing the effectiveness of rushing per play for several schools
rushing2013 %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
inner_join(teams2013, by="Team Code") %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
geom_violin() +
labs(x="",
y="Rushing Yards",
title = "Distribution of Rushing Yards per Attempt by Top Football Schools") +
theme(legend.position = "none")
#Graph comparing the effectiveness of rushing per play for several schools
passing2013 %>%
inner_join(teams2013, by="Team Code") %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
labs(x="",
y="Passing Yards",
title = "Distribution of Passing Yards per Attempt by Top Football Schools") +
geom_violin() +
theme(legend.position="none")
seasonStats2013 %>%
inner_join(teams2013, by="Team Code") %>%
inner_join(confrence2013, by="Conference Code") %>%
filter(Subdivision=="FBS") %>%
ggplot(aes(x=factor(Name.x), y=Wins, color=Name.y)) +
geom_point() +
labs(x="Team") +
theme(axis.text.x=element_blank())
#Adding Wins to Team Game Stats
teamGameStats2013 <- teamGameStats2013 %>%
filter(win == TRUE) %>%
group_by(`Team Code`) %>%
summarize(Wins=n()) %>%
inner_join(teamGameStats2013, by="Team Code")
#Graph comparing Yards to Points
teamGameStats2013 %>%
ggplot((aes(x=(`Pass Yard` + `Rush Yard`), y=Points))) +
geom_point() +
geom_smooth(method=lm) +
labs(x="Total Yards",
y="Points Scored",
title = "Points Scored per Yard by Game")
#Graph comparing the effectiveness of rushing per play for several schools
rushing2013 %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
inner_join(teams2013, by="Team Code") %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
geom_violin() +
labs(x="",
y="Rushing Yards",
title = "Distribution of Rushing Yards per Attempt by Top Football Schools") +
theme(legend.position = "none")
#Graph comparing the effectiveness of rushing per play for several schools
passing2013 %>%
inner_join(teams2013, by="Team Code") %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
labs(x="",
y="Passing Yards",
title = "Distribution of Passing Yards per Attempt by Top Football Schools") +
geom_violin() +
theme(legend.position="none")
wins %>%
inner_join(teams2013, by="Team Code") %>%
inner_join(confrence2013, by="Conference Code") %>%
filter(Subdivision=="FBS") %>%
ggplot(aes(x=factor(Name.x), y=Wins, color=Name.y)) +
geom_point() +
labs(x="Team") +
theme(axis.text.x=element_blank())
#FCS not included in dataset, only consider FBS
seasonStats2013 <- wins %>%
inner_join(teams2013, by="Team Code") %>%
inner_join(confrence2013, by="Conference Code") %>%
filter(Subdivision=="FBS")
findPoints <- function(gameCode, teamCode){
opponentPoints <- teamGameStats2013 %>%
filter(`Game Code` == gameCode & `Team Code` != teamCode) %>%
select(Points)
as.double(opponentPoints[1,1])
}
for(i in 1:nrow(teamGameStats2013)){
teamGameStats2013[i,69] = findPoints(as.character(teamGameStats2013[i,2]), as.double(teamGameStats2013[i,1]))
}
names(teamGameStats2013)[69] <- "opponentPoints"
teamGameStats2013 <- teamGameStats2013 %>%
mutate(win=opponentPoints<Points)
attendance2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/game-statistics.csv")
teamGameStats2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/team-game-statistics.csv")
rushing2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/rush.csv")
passing2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/pass.csv")
teams2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/team.csv")
games2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/game.csv")
confrence2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/conference.csv")
#Todo: Import all tables, and concat the tables with rbind()
findPoints <- function(gameCode, teamCode){
opponentPoints <- teamGameStats2013 %>%
filter(`Game Code` == gameCode & `Team Code` != teamCode) %>%
select(Points)
as.double(opponentPoints[1,1])
}
for(i in 1:nrow(teamGameStats2013)){
teamGameStats2013[i,69] = findPoints(as.character(teamGameStats2013[i,2]), as.double(teamGameStats2013[i,1]))
}
names(teamGameStats2013)[69] <- "opponentPoints"
teamGameStats2013 <- teamGameStats2013 %>%
mutate(win=opponentPoints<Points)
seasonWins <- teamGameStats2013 %>%
filter(win == TRUE) %>%
group_by(`Team Code`) %>%
summarize(Wins=n())
remove(seasonStats2013)
remove(wins)
attendance2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/game-statistics.csv")
teamGameStats2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/team-game-statistics.csv")
rushing2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/rush.csv")
passing2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/pass.csv")
teams2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/team.csv")
games2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/game.csv")
confrence2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/conference.csv")
#Todo: Import all tables, and concat the tables with rbind()
findPoints <- function(gameCode, teamCode){
opponentPoints <- teamGameStats2013 %>%
filter(`Game Code` == gameCode & `Team Code` != teamCode) %>%
select(Points)
as.double(opponentPoints[1,1])
}
for(i in 1:nrow(teamGameStats2013)){
teamGameStats2013[i,69] = findPoints(as.character(teamGameStats2013[i,2]), as.double(teamGameStats2013[i,1]))
}
names(teamGameStats2013)[69] <- "opponentPoints"
teamGameStats2013 <- teamGameStats2013 %>%
mutate(win=opponentPoints<Points)
seasonWins2013 <- teamGameStats2013 %>%
filter(win == TRUE) %>%
group_by(`Team Code`) %>%
summarize(Wins=n())
# See points scored per game per each number of total yardage
teamGameStats2013 %>%
ggplot((aes(x=(`Rush Yard`+`Pass Yard`+`Kickoff Ret Yard`+`Punt Ret Yard`+`Misc Ret Yard`+`Int Ret Yard`+`Fum Ret Yard`), y=Points))) +
geom_point() +
geom_smooth(method=lm) +
labs(x="Total Yards",
y="Points Scored",
title = "Points Scored per Yard by Game")
# See the distribution of rushing yards per attempt by several top football schools
rushing2013 %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
inner_join(teams2013, by="Team Code") %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
geom_violin() +
labs(x="",
y="Rushing Yards",
title = "Distribution of Rushing Yards per Attempt by Top Football Schools") +
theme(legend.position = "none")
# See the distribution of passing yards per attempt by top football schools
passing2013 %>%
inner_join(teams2013, by="Team Code") %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
labs(x="",
y="Passing Yards",
title = "Distribution of Passing Yards per Attempt by Top Football Schools") +
geom_violin() +
theme(legend.position="none")
# See total wins for each team, seperated by confrence
seasonWins %>%
inner_join(teams2013, by="Team Code") %>%
inner_join(confrence2013, by="Conference Code") %>%
filter(Subdivision=="FBS") %>%
ggplot(aes(x=reorder(factor(Name.x), Wins), y=Wins, color=Name.y)) +
geom_point() +
labs(x="Team") +
theme(axis.text.x=element_blank())
#FCS not included in dataset, only consider FBS
seasonStats2013 <- wins %>%
inner_join(teams2013, by="Team Code") %>%
inner_join(confrence2013, by="Conference Code") %>%
filter(Subdivision=="FBS")
# See points scored per game per each number of total yardage
teamGameStats2013 %>%
ggplot((aes(x=(`Rush Yard`+`Pass Yard`+`Kickoff Ret Yard`+`Punt Ret Yard`+`Misc Ret Yard`+`Int Ret Yard`+`Fum Ret Yard`), y=Points))) +
geom_point() +
geom_smooth(method=lm) +
labs(x="Total Yards",
y="Points Scored",
title = "Points Scored per Yard by Game")
# See the distribution of rushing yards per attempt by several top football schools
rushing2013 %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
inner_join(teams2013, by="Team Code") %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
geom_violin() +
labs(x="",
y="Rushing Yards",
title = "Distribution of Rushing Yards per Attempt by Top Football Schools") +
theme(legend.position = "none")
# See the distribution of passing yards per attempt by top football schools
passing2013 %>%
inner_join(teams2013, by="Team Code") %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
labs(x="",
y="Passing Yards",
title = "Distribution of Passing Yards per Attempt by Top Football Schools") +
geom_violin() +
theme(legend.position="none")
# See total wins for each team, seperated by confrence
seasonWins %>%
inner_join(teams2013, by="Team Code") %>%
inner_join(confrence2013, by="Conference Code") %>%
filter(Subdivision=="FBS") %>%
ggplot(aes(x=reorder(factor(Name.x), Wins), y=Wins, color=Name.y)) +
geom_point() +
labs(x="Team") +
theme(axis.text.x=element_blank()
# See points scored per game per each number of total yardage
teamGameStats2013 %>%
ggplot((aes(x=(`Rush Yard`+`Pass Yard`+`Kickoff Ret Yard`+`Punt Ret Yard`+`Misc Ret Yard`+`Int Ret Yard`+`Fum Ret Yard`), y=Points))) +
geom_point() +
geom_smooth(method=lm) +
labs(x="Total Yards",
y="Points Scored",
title = "Points Scored per Yard by Game")
# See the distribution of rushing yards per attempt by several top football schools
rushing2013 %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
inner_join(teams2013, by="Team Code") %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
geom_violin() +
labs(x="",
y="Rushing Yards",
title = "Distribution of Rushing Yards per Attempt by Top Football Schools") +
theme(legend.position = "none")
# See the distribution of passing yards per attempt by top football schools
passing2013 %>%
inner_join(teams2013, by="Team Code") %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
labs(x="",
y="Passing Yards",
title = "Distribution of Passing Yards per Attempt by Top Football Schools") +
geom_violin() +
theme(legend.position="none")
# See total wins for each team, seperated by confrence
seasonWins %>%
inner_join(teams2013, by="Team Code") %>%
inner_join(confrence2013, by="Conference Code") %>%
filter(Subdivision=="FBS") %>%
ggplot(aes(x=reorder(factor(Name.x), Wins), y=Wins, color=Name.y)) +
geom_point() +
labs(x="Team") +
theme(axis.text.x=element_blank())
# See points scored per game per each number of total yardage
teamGameStats2013 %>%
ggplot((aes(x=(`Rush Yard`+`Pass Yard`+`Kickoff Ret Yard`+`Punt Ret Yard`+`Misc Ret Yard`+`Int Ret Yard`+`Fum Ret Yard`), y=Points))) +
geom_point() +
geom_smooth(method=lm) +
labs(x="Total Yards",
y="Points Scored",
title = "Points Scored per Yard by Game")
# See the distribution of rushing yards per attempt by several top football schools
rushing2013 %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
inner_join(teams2013, by="Team Code") %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
geom_violin() +
labs(x="",
y="Rushing Yards",
title = "Distribution of Rushing Yards per Attempt by Top Football Schools") +
theme(legend.position = "none")
# See the distribution of passing yards per attempt by top football schools
passing2013 %>%
inner_join(teams2013, by="Team Code") %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
labs(x="",
y="Passing Yards",
title = "Distribution of Passing Yards per Attempt by Top Football Schools") +
geom_violin() +
theme(legend.position="none")
# See total wins for each team, seperated by confrence
seasonWins %>%
inner_join(teams2013, by="Team Code") %>%
inner_join(confrence2013, by="Conference Code") %>%
filter(Subdivision=="FBS") %>%
ggplot(aes(x=factor(Name.x), y=Wins, color=Name.y)) +
geom_point() +
labs(x="Team") +
theme(axis.text.x=element_blank())
games2013
homeGames2013 <- teamGameStats2013 %>%
filter()
inner_join(games2013, by="Game Code")
# See points scored per game per each number of total yardage
teamGameStats2013 %>%
ggplot((aes(x=(`Rush Yard`+`Pass Yard`+`Kickoff Ret Yard`+`Punt Ret Yard`+`Misc Ret Yard`+`Int Ret Yard`+`Fum Ret Yard`), y=Points))) +
geom_point() +
geom_smooth(method=lm) +
labs(x="Total Yards",
y="Points Scored",
title = "Points Scored per Yard by Game")
# See the distribution of rushing yards per attempt by several top football schools
rushing2013 %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
inner_join(teams2013, by="Team Code") %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
geom_violin() +
labs(x="",
y="Rushing Yards",
title = "Distribution of Rushing Yards per Attempt by Top Football Schools") +
theme(legend.position = "none")
# See the distribution of passing yards per attempt by top football schools
passing2013 %>%
inner_join(teams2013, by="Team Code") %>%
filter(`Team Code` == 392 | `Team Code` == 8 | `Team Code` == 518 | `Team Code` == 147 | `Team Code` == 365 | `Team Code` == 522) %>%
ggplot(aes(x=reorder(factor(Name), Yards), y=Yards, color=Name)) +
labs(x="",
y="Passing Yards",
title = "Distribution of Passing Yards per Attempt by Top Football Schools") +
geom_violin() +
theme(legend.position="none")
# See total wins for each team, seperated by confrence
seasonWins %>%
inner_join(teams2013, by="Team Code") %>%
inner_join(confrence2013, by="Conference Code") %>%
filter(Subdivision=="FBS") %>%
ggplot(aes(x=factor(Name.x), y=Wins, color=Name.y)) +
geom_point() +
labs(x="Team") +
theme(axis.text.x=element_blank())
teamGameStats2013 <- teamGameStats2013 %>%
mutate(yardsFor=`Rush Yard`+`Pass Yard`+`Kickoff Ret Yard`+`Punt Ret Yard`+`Misc Ret Yard`+`Int Ret Yard`+`Fum Ret Yard`)
teamGameStats2013 %>%
ggplot(aes(x=win, y=yardsFor)) +
geom_violin()
findYards <- function(gameCode, teamCode){
opponentYards <- teamGameStats2013 %>%
filter(`Game Code` == gameCode & `Team Code` != teamCode) %>%
select(`Rush Yard`,`Pass Yard`,`Kickoff Ret Yard`,`Punt Ret Yard`,`Misc Ret Yard`,`Int Ret Yard`,`Fum Ret Yard`)
as.double(opponentYards[1,1]+opponentYards[1,2]+opponentYards[1,3]+opponentYards[1,4]+opponentYards[1,5]+opponentYards[1,6]+opponentYards[1,7])
}
for(i in 1:nrow(teamGameStats2013)){
teamGameStats2013[i,72] = findYards(as.character(teamGameStats2013[i,2]), as.double(teamGameStats2013[i,1]))
}
names(teamGameStats2013)[72] <- "yardsAgainst"
teamGameStats2013 %>%
ggplot(aes(x=win, y=yardsAgainst)) +
geom_violin()
findTurnovers <- function(gameCode, teamCode){
opponentTurnovers <- teamGameStats2013 %>%
filter(`Game Code` == gameCode & `Team Code` != teamCode) %>%
select(`Pass Int`, `Fumble Lost`)
as.double(opponentTurnovers[1,1] + opponentTurnovers[1,2])
}
for(i in 1:nrow(teamGameStats2013)){
teamGameStats2013[i,73] = (teamGameStats2013[i, 45] + teamGameStats2013[i, 10]) - findTurnovers(as.character(teamGameStats2013[i,2]), as.double(teamGameStats2013[i,1]))
}
names(teamGameStats2013)[73] <- turnoverDiff
teamGameStats2013 %>%
ggplot(aes(x=win, y=yardsAgainst)) +
geom_violin()
findTurnovers <- function(gameCode, teamCode){
opponentTurnovers <- teamGameStats2013 %>%
filter(`Game Code` == gameCode & `Team Code` != teamCode) %>%
select(`Pass Int`, `Fumble Lost`)
as.double(opponentTurnovers[1,1] + opponentTurnovers[1,2])
}
for(i in 1:nrow(teamGameStats2013)){
teamGameStats2013[i,73] = (teamGameStats2013[i, 45] + teamGameStats2013[i, 10]) - findTurnovers(as.character(teamGameStats2013[i,2]), as.double(teamGameStats2013[i,1]))
}
names(teamGameStats2013)[73] <- "turnoverDiff"
teamGameStats2013 %>%
ggplot(aes(x=win, y=turnoverDiff)) +
geom_violin()
attendance2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/game-statistics.csv")
teamGameStats2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/team-game-statistics.csv")
rushing2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/rush.csv")
passing2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/pass.csv")
teams2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/team.csv")
games2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/game.csv")
confrence2013 <- read_csv("college-football-statistics/cfbstats-com-2013-1-5-20/conference.csv")
#Todo: Import all tables, and concat the tables with rbind()
findPoints <- function(gameCode, teamCode){
opponentPoints <- teamGameStats2013 %>%
filter(`Game Code` == gameCode & `Team Code` != teamCode) %>%
select(Points)
as.double(opponentPoints[1,1])
}
for(i in 1:nrow(teamGameStats2013)){
teamGameStats2013[i,69] = findPoints(as.character(teamGameStats2013[i,2]), as.double(teamGameStats2013[i,1]))
}
names(teamGameStats2013)[69] <- "opponentPoints"
teamGameStats2013 <- teamGameStats2013 %>%
mutate(win=opponentPoints<Points)
seasonWins2013 <- teamGameStats2013 %>%
filter(win == TRUE) %>%
group_by(`Team Code`) %>%
summarize(Wins=n())
findTurnovers <- function(gameCode, teamCode){
opponentTurnovers <- teamGameStats2013 %>%
filter(`Game Code` == gameCode & `Team Code` != teamCode) %>%
select(`Pass Int`, `Fumble Lost`)
as.double(opponentTurnovers[1,1] + opponentTurnovers[1,2])
}
for(i in 1:nrow(teamGameStats2013)){
teamGameStats2013[i,73] = (teamGameStats2013[i, 45] + teamGameStats2013[i, 10]) - findTurnovers(as.character(teamGameStats2013[i,2]), as.double(teamGameStats2013[i,1]))
}
names(teamGameStats2013)[73] <- "turnoverDiff"
teamGameStats2013 %>%
ggplot(aes(x=win, y=turnoverDiff)) +
geom_violin()
teamGameStats2013 <- teamGameStats2013 %>%
mutate(yardsFor=`Rush Yard`+`Pass Yard`+`Kickoff Ret Yard`+`Punt Ret Yard`+`Misc Ret Yard`+`Int Ret Yard`+`Fum Ret Yard`)
teamGameStats2013 %>%
ggplot(aes(x=win, y=yardsFor)) +
geom_violin()
findYards <- function(gameCode, teamCode){
opponentYards <- teamGameStats2013 %>%
filter(`Game Code` == gameCode & `Team Code` != teamCode) %>%
select(`Rush Yard`,`Pass Yard`,`Kickoff Ret Yard`,`Punt Ret Yard`,`Misc Ret Yard`,`Int Ret Yard`,`Fum Ret Yard`)
as.double(opponentYards[1,1]+opponentYards[1,2]+opponentYards[1,3]+opponentYards[1,4]+opponentYards[1,5]+opponentYards[1,6]+opponentYards[1,7])
}
for(i in 1:nrow(teamGameStats2013)){
teamGameStats2013[i,72] = findYards(as.character(teamGameStats2013[i,2]), as.double(teamGameStats2013[i,1]))
}
names(teamGameStats2013)[72] <- "yardsAgainst"
teamGameStats2013 %>%
ggplot(aes(x=win, y=yardsAgainst)) +
geom_violin()
findTurnovers <- function(gameCode, teamCode){
opponentTurnovers <- teamGameStats2013 %>%
filter(`Game Code` == gameCode & `Team Code` != teamCode) %>%
select(`Pass Int`, `Fumble Lost`)
as.double(opponentTurnovers[1,1] + opponentTurnovers[1,2])
}
for(i in 1:nrow(teamGameStats2013)){
teamGameStats2013[i,73] = (teamGameStats2013[i, 45] + teamGameStats2013[i, 10]) - findTurnovers(as.character(teamGameStats2013[i,2]), as.double(teamGameStats2013[i,1]))
}
names(teamGameStats2013)[73] <- "turnoverDiff"
teamGameStats2013 %>%
ggplot(aes(x=win, y=turnoverDiff)) +
geom_violin()
View(teamGameStats2013)
